{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/rafael/HD/Estudos/ignite-template-reactjs-upload-de-imagens/src/pages/index.tsx\";\nimport { Button, Box, Flex } from '@chakra-ui/react';\nimport { useMemo } from 'react';\nimport { useInfiniteQuery } from 'react-query';\nimport { Header } from '../components/Header';\nimport { CardList } from '../components/CardList';\nimport { api } from '../services/api';\nimport { Loading } from '../components/Loading';\nimport { Error } from '../components/Error';\nexport default function Home() {\n  const fetchImages = async (param = null) => {\n    const {\n      pageParam\n    } = param;\n    const response = await api.get('/api/images', {\n      params: {\n        after: pageParam\n      }\n    });\n    return response.data;\n  };\n\n  const {\n    data,\n    isLoading,\n    isError,\n    isFetchingNextPage,\n    fetchNextPage,\n    hasNextPage\n  } = useInfiniteQuery('images', fetchImages, {\n    getNextPageParam: (lastPage, pages) => {\n      return pages[pages.length - 1].after || null;\n    }\n  });\n  const formattedData = useMemo(() => {\n    const images = data === null || data === void 0 ? void 0 : data.pages.map(page => page.data).flat();\n    return images;\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : isError ? /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        maxW: 1120,\n        px: 20,\n        mx: \"auto\",\n        my: 20,\n        children: [/*#__PURE__*/_jsxDEV(CardList, {\n          cards: formattedData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), hasNextPage && /*#__PURE__*/_jsxDEV(Flex, {\n          mt: \"1rem\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => fetchNextPage(),\n            disabled: isFetchingNextPage,\n            children: isFetchingNextPage ? 'Carregando...' : 'Carregar mais'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/home/rafael/HD/Estudos/ignite-template-reactjs-upload-de-imagens/src/pages/index.tsx"],"names":["Button","Box","Flex","useMemo","useInfiniteQuery","Header","CardList","api","Loading","Error","Home","fetchImages","param","pageParam","response","get","params","after","data","isLoading","isError","isFetchingNextPage","fetchNextPage","hasNextPage","getNextPageParam","lastPage","pages","length","formattedData","images","map","page","flat"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,GAAjB,EAAsBC,IAAtB,QAAkC,kBAAlC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AAEA,eAAe,SAASC,IAAT,GAA6B;AAC1C,QAAMC,WAAW,GAAG,OAAOC,KAAK,GAAG,IAAf,KAAwB;AAC1C,UAAM;AAAEC,MAAAA;AAAF,QAAgBD,KAAtB;AACA,UAAME,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAJ,CAAQ,aAAR,EAAuB;AAC5CC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAEJ;AAAT;AADoC,KAAvB,CAAvB;AAIA,WAAOC,QAAQ,CAACI,IAAhB;AACD,GAPD;;AASA,QAAM;AACJA,IAAAA,IADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,kBAJI;AAKJC,IAAAA,aALI;AAMJC,IAAAA;AANI,MAOFnB,gBAAgB,CAAC,QAAD,EAAWO,WAAX,EAAwB;AAC1Ca,IAAAA,gBAAgB,EAAE,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACrC,aAAOA,KAAK,CAACA,KAAK,CAACC,MAAN,GAAe,CAAhB,CAAL,CAAwBV,KAAxB,IAAiC,IAAxC;AACD;AAHyC,GAAxB,CAPpB;AAaA,QAAMW,aAAa,GAAGzB,OAAO,CAAC,MAAM;AAClC,UAAM0B,MAAM,GAAGX,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEQ,KAAN,CAAYI,GAAZ,CAAgBC,IAAI,IAAIA,IAAI,CAACb,IAA7B,EAAmCc,IAAnC,EAAf;AACA,WAAOH,MAAP;AACD,GAH4B,EAG1B,CAACX,IAAD,CAH0B,CAA7B;AAKA,sBACE;AAAA,cACGC,SAAS,gBACR,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADQ,GAENC,OAAO,gBACT,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADS,gBAGT;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,IAAX;AAAiB,QAAA,EAAE,EAAE,EAArB;AAAyB,QAAA,EAAE,EAAC,MAA5B;AAAmC,QAAA,EAAE,EAAE,EAAvC;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEQ;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGL,WAAW,iBACV,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,MAAT;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAE,MAAMD,aAAa,EAD9B;AAEE,YAAA,QAAQ,EAAED,kBAFZ;AAAA,sBAIGA,kBAAkB,GAAG,eAAH,GAAqB;AAJ1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AANJ,mBADF;AA0BD","sourcesContent":["import { Button, Box, Flex } from '@chakra-ui/react';\nimport { useMemo } from 'react';\nimport { useInfiniteQuery } from 'react-query';\n\nimport { Header } from '../components/Header';\nimport { CardList } from '../components/CardList';\nimport { api } from '../services/api';\nimport { Loading } from '../components/Loading';\nimport { Error } from '../components/Error';\n\nexport default function Home(): JSX.Element {\n  const fetchImages = async (param = null) => {\n    const { pageParam } = param;\n    const response = await api.get('/api/images', {\n      params: { after: pageParam },\n    });\n\n    return response.data;\n  };\n\n  const {\n    data,\n    isLoading,\n    isError,\n    isFetchingNextPage,\n    fetchNextPage,\n    hasNextPage,\n  } = useInfiniteQuery('images', fetchImages, {\n    getNextPageParam: (lastPage, pages) => {\n      return pages[pages.length - 1].after || null;\n    },\n  });\n\n  const formattedData = useMemo(() => {\n    const images = data?.pages.map(page => page.data).flat();\n    return images;\n  }, [data]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loading />\n      ) : isError ? (\n        <Error />\n      ) : (\n        <>\n          <Header />\n          <Box maxW={1120} px={20} mx=\"auto\" my={20}>\n            <CardList cards={formattedData} />\n            {hasNextPage && (\n              <Flex mt=\"1rem\">\n                <Button\n                  onClick={() => fetchNextPage()}\n                  disabled={isFetchingNextPage}\n                >\n                  {isFetchingNextPage ? 'Carregando...' : 'Carregar mais'}\n                </Button>\n              </Flex>\n            )}\n          </Box>\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}